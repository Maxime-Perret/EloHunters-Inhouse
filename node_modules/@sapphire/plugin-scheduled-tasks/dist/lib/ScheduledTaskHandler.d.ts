import type { ScheduledTaskBaseStrategy } from './types/ScheduledTaskBaseStrategy';
import type { ScheduledTasksOptions } from './types/ScheduledTasksOptions';
import type { ScheduledTasksTaskOptions } from './types/ScheduledTasksTaskOptions';
export declare class ScheduledTaskHandler {
    readonly strategy: ScheduledTaskBaseStrategy;
    constructor(options: ScheduledTasksOptions | undefined);
    get client(): ScheduledTaskBaseStrategy['client'];
    create(task: string, payload: unknown, options?: ScheduledTasksTaskOptions | number): unknown;
    createRepeated(): void;
    delete(id?: unknown): unknown;
    list(options?: unknown): unknown;
    listRepeated(options?: unknown): unknown;
    get(id: unknown): unknown;
    run(task: string, payload: unknown): Promise<unknown>;
    private get store();
}
//# sourceMappingURL=ScheduledTaskHandler.d.ts.map